image: node:18.20-alpine

stages:
  - build
  # - check
  # - test

before_script:
  - npm ci
   # Install dependencies
  - sudo apt-get update && sudo apt-get install -y wget unzip openjdk-11-jdk
  # Download and install the Android SDK command-line tools
  - wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O commandlinetools.zip
  - unzip commandlinetools.zip -d $ANDROID_HOME
  - rm commandlinetools.zip
  # Set up the Android SDK
  - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
  # Accept licenses and install required tools and SDK
  - yes | sdkmanager --licenses
  - sdkmanager --update
  - sdkmanager "platform-tools" "build-tools;latest" "platforms;android-33"  # Replace with the latest SDK version

cache:
  paths:
    - node_modules/

variables:
  ANDROID_HOME: "/opt/android-sdk"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ANDROID_SDK_ROOT: "/opt/android-sdk"
  JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"

# lint_check:
#   stage: check
#   script:
#     - npm run lint

# ts_check:
#   stage: check
#   script:
#     - npm run tsc

# test_check:
#   stage: test
#   script:
#     - npm run test
#   coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)%/'
#   artifacts:
#     when: always
#     reports:
#       coverage_report:
#         coverage_format: cobertura
#         path: coverage/cobertura-coverage.xml
#       junit:
#         - junit.xml

build_android_apk:
  stage: build
  script:
    - cd android
    - ./gradlew clean
    - ./gradlew assembleRelease
  artifacts:
    paths:
      - build/android/app/build/outputs/apk/release/app-release.apk
    expire_in: 1 week
