# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  install_dependency:
    runs-on: ubuntu-latest
    container: node:18.20-alpine
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci
      
  check_eslint:
    name: "Check eslint"
    runs-on: ubuntu-latest
    needs: install_dependency
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci --prefer-offline
      - run: npm run lint
      
  check_tslint:
    name: "Check tslint"
    runs-on: ubuntu-latest
    needs: install_dependency
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci --prefer-offline
      - run: npm run tsc

  check_tests:
    name: "Check tests"
    runs-on: ubuntu-latest
    needs: [check_eslint, check_tslint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci --prefer-offline
      - run: npm run test
